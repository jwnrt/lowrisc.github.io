<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RISC-V LLVM on lowRISC</title>
    <link>https://www.lowrisc.org/llvm/</link>
    <description>Recent content in RISC-V LLVM on lowRISC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 May 2018 13:26:41 +0100</lastBuildDate>
    
	<atom:link href="https://www.lowrisc.org/llvm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RISC-V LLVM Coding Lab at the LLVM Developers&#39; Meeting 2018</title>
      <link>https://www.lowrisc.org/llvm/devmtg18/</link>
      <pubDate>Thu, 11 Oct 2018 14:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/llvm/devmtg18/</guid>
      <description>Alex Bradbury is running a Coding Lab at the 2018 LLVM Developers&amp;rsquo; Meeting to complement his LLVM backend tutorial.
This coding lab will build on the material presented in the backend and guide you through some sample modifications to the RISC-V backend, including both codegen and MC layer (assembler/disassembler) modifications. Anyone familiar with C++ and a passing familiarity with LLVM IR should be able to get something out of this session, and you&amp;rsquo;re able to go at your own pace.</description>
    </item>
    
    <item>
      <title>lowRISC RISC-V LLVM status page</title>
      <link>https://www.lowrisc.org/llvm/status/</link>
      <pubDate>Mon, 07 May 2018 10:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/llvm/status/</guid>
      <description>lowRISC has been pursuing the development of an upstream RISC-V LLVM backend. For an overview of this work as well as the current patch set, please see github.com/lowRISC/riscv-llvm.
An early status blog post provides a good overview of the development approach.
As of May 2018, the vast majority of these patches are now upstream and most users wishing to experiment with support for RISC-V in LLVM projects will likely be best served by building directly from the upstream repositories.</description>
    </item>
    
  </channel>
</rss>