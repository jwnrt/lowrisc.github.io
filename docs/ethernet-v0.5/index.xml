<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial for the v0.5 lowRISC preview release on lowRISC</title>
    <link>https://www.lowrisc.org/docs/ethernet-v0.5/</link>
    <description>Recent content in Tutorial for the v0.5 lowRISC preview release on lowRISC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jan 2018 13:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.lowrisc.org/docs/ethernet-v0.5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview of the ethernet infrastructure</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/overview/</link>
      <pubDate>Fri, 12 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/overview/</guid>
      <description>Pre-defined Design constraints Our goal of supporting the same FPGA board as the previous release may only be realised with a single 100BaseT Ethernet port (the most common type encountered), due to PCB design constraints. Nevertheless it is conceived that 1Gbps Ethernet could be made use of by a different board. However using this version of the FPGA the practical performance is limited to about 2 megabits per second.</description>
    </item>
    
    <item>
      <title>Build your own bitstream and images</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/development/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/development/</guid>
      <description>Generate the bitstream FPGA demo with Ethernet (default bootloader) cd $TOP/fpga/board/nexys4_ddr make cleanall make bitstream  The generated bitstream is located at lowrisc-chip-imp/lowrisc-chip-imp.runs/impl_1/chip_top.bit. This will take some time (20-60 minutes depending on your computer).
Program the bootloader on FPGA Next, turn on the FPGA board and connect the USB cable. Now you download the bitstream to the quad-SPI on the FPGA board:
make cfgmem make program-cfgmem  At this point, you should check the MODE jumper is in QSPI mode and then press the PROG button.</description>
    </item>
    
    <item>
      <title>Install FPGA and simulation tools</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/installtools/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/installtools/</guid>
      <description>This part is identical to the previous tutorial, simply perform those steps:
 Install Xilinx Vivado Install Verilator  The above procedure may change your LD_LIBRARY_PATH to an older version of libraries than some systems expect. If this happens, you may get a message such as:
 awk: symbol lookup error: awk: undefined symbol: mpfr_z_sub  A work-around is to manually execute unset LD_LIBRARY_PATH afterwards before installing the cross-compiler.</description>
    </item>
    
    <item>
      <title>Prepare the environment</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/environment/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/environment/</guid>
      <description>lowRISC tools and source code are robust between versions of Linux, but it has been found that Vivado (the Xilinx FPGA implementation suite) is particular about the O/S
All builds were completed with Vivado 2015.4. If a newer version is attempted there could be script incompatibilities to fix and/or incompatible upgrades to internal Xilinx IP. We have no evidence that newer versions do not work, however IP changes to support newer chip families can cause obscure error messages which are offputting for the first-time user.</description>
    </item>
    
    <item>
      <title>Release notes</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/release/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/release/</guid>
      <description>Release notes  Rocket-core (Chisel)
 Corrections to tag cache security and Rocket behaviour corrected.   Software environment
 Choice of boot options controlled by DIP-switches from one executable. Accelerated, interrupt driven access to SD-cards in Linux. Interrupt driven access to 100Base-T F/D Ethernet Linux device driver. Remote Booting from Ethernet or 4-bit SD-mode supported. Network Filing System root supported (with static IP addresses). DHCP networking and Dropbear SSH server/client remote access with local SD-card root.</description>
    </item>
    
    <item>
      <title>Running the pre-built NFS-root image on the FPGA</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/fpga/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/fpga/</guid>
      <description>In this step, we want to test the Ethernet functionality on an FPGA board. The system will use the Ethernet 100Base-T connection at 100 MBaud to communicate with the LowRISC Linux system.
Run the pre-built FPGA demo The files you may need:
 chip_top.bit: The tagpipe/minion/debug enabled FPGA bitstream boot0001.bin: Linux, Busybox and Berkley bootloader (BBL) packaged in one image (for NFS root filing system). rootfs.ext2 riscv-poky root filing system ready-built for LowRISC  Download and write the bitstream</description>
    </item>
    
    <item>
      <title>Running the pre-built SD-image on the FPGA</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/fpga2/</link>
      <pubDate>Thu, 11 Jan 2018 13:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/fpga2/</guid>
      <description>In this alternative step, we want to test standalone Ethernet functionality on an FPGA board, complete with dynamic host configuration protocol (DHCP), routing to the internet, and remote ssh.
The system will use the Ethernet 100Base-T connection at 100 MBaud to communicate with the LowRISC Linux system.
Run the pre-built FPGA demo The files you may need:
 chip_top.bit: The tagpipe/minion/debug enabled FPGA bitstream boot0000.bin: Linux, Busybox and Berkley bootloader (BBL) packaged in one image (for local filing system).</description>
    </item>
    
    <item>
      <title>lowRISC Ethernet internals</title>
      <link>https://www.lowrisc.org/docs/ethernet-v0.5/ethernet/</link>
      <pubDate>Thu, 11 Jan 2018 11:00:00 +0000</pubDate>
      
      <guid>https://www.lowrisc.org/docs/ethernet-v0.5/ethernet/</guid>
      <description>This lowRISC release introduces 100Mbps Ethernet, allowing remote ssh and network filing system functionality.
RTL changes The PHY of the Ethernet uses reduced media independent interface (RMII). The transmission rate is fixed at 100MHz and is found to be compatible with most hubs and switches. The possibility to communicate with the PHY is programmed but not used.
The core of the Ethernet block is adapted from a suite of IP provided by Alex Forencich.</description>
    </item>
    
  </channel>
</rss>